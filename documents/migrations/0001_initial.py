# Generated by Django 5.1.7 on 2025-05-09 19:44

import django.db.models.deletion
import pgvector.django.vector
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("api", "0002_pgvector"),
    ]

    operations = [
        migrations.CreateModel(
            name="DocumentContent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "drive_file",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="document_contents",
                        to="api.drivefile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DocumentTask",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("scheduled_at", models.DateTimeField(blank=True, null=True)),
                ("due_at", models.DateTimeField(blank=True, null=True)),
                (
                    "recipient_email_list",
                    models.JSONField(blank=True, default=list, null=True),
                ),
                (
                    "sender_email",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                ("subject", models.CharField(blank=True, max_length=255, null=True)),
                ("body", models.TextField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("accepted", "Accepted"),
                            ("rejected", "Rejected"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "document",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tasks",
                        to="documents.documentcontent",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DocumentChunk",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField()),
                ("embedding", pgvector.django.vector.VectorField(dimensions=1536)),
                ("chunk_index", models.IntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "document",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="chunks",
                        to="documents.documentcontent",
                    ),
                ),
            ],
            options={
                "ordering": ["chunk_index"],
                "indexes": [
                    models.Index(
                        fields=["chunk_index"], name="documents_d_chunk_i_b4d0ea_idx"
                    ),
                    models.Index(
                        fields=["embedding"], name="document_chunk_embedding_idx"
                    ),
                ],
            },
        ),
    ]
